

service.name=service-brick-dailyfunctioning-dm

#The server takes its identity from eureka.instance.hostname which by default resolves to the hostname
eureka.instance.hostname=localhost
#The port where the eureka server service will be running and servicing requests
server.port=8080
#application name
spring.application.name=${service.name}

#The identifier in the registry - this property is published by the /info endpoint
info.id=${service.name}

eureka.instance.app-group-name=ewall-app-group

#when deploying more than 1 artefact in 1 container domains for Managed Beans have to be different (otherwise 2 org.springframework.cloud.context.environment.EnvironmentManager's are trying to be registered in jmx and there can only be one)
spring.jmx.default_domain=${service.name}
#eureka.region=default

#Virtual host name by which the clients identifies this service. application virtual ip address (clients can query on this vipAddress)
#eureka.vipAddress=eureka.mydomain.net

#For eureka clients running in eureka server, it needs to connect to servers in other zones
#eureka.preferSameZone=true

#Change this if you want to use a DNS based lookup for determining other eureka servers. For example
#of specifying the DNS entries, check the eureka-client-test.properties, eureka-client-prod.properties
#eureka.shouldUseDns=false
#eureka.us-east-1.availabilityZones=default
#eureka.instance.metadataMap.instanceId=${spring.application.name}:${spring.application.instance_id:${random.value}}

eureka.instance.metadataMap.hostname=${eureka.instance.hostname}
eureka.instance.metadataMap.securePort=${server.port}
eureka.instance.homePageUrl=https://${eureka.instance.hostname}:${server.port}/
eureka.instance.statusPageUrl=https://${eureka.instance.hostname}:${server.port}/admin/info

#for client registration @EnableDiscoveryClient annotation is needed. If client behavior is needed then "registerWithEureka" should be true 
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=false
#It only registers to the first in the comma separated list.  The remaining are used only if attempting to contact the first fails.
#eureka.client.serviceUrl.defaultZone=http://someusername:somepassword@localhost:8761/eureka/
#NOTE: registered apps can be seen on defaultZone/apps link so: http://localhost:8080/eureka/eureka/apps
#eureka.client.serviceUrl.defaultZone=http://localhost:8080/eurekaServer/eureka/
eureka.client.serviceUrl.defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka-server/eureka/

#more info on: http://cloud.spring.io/spring-cloud-netflix/spring-cloud-netflix.html

